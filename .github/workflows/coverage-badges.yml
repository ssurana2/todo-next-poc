name: "Code coverage badge generator"

on:
  push:
    branches: [ main ]

jobs:
  coverage_reporting:
    name: Coverage repporting
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: install node modules
      run: npm ci
    - name: Generate coverage summary
      run: npm run test:json-summary
    - name: Execute shell
      run: |
        OIFS="$IFS"
        IFS="|"
        set $(node scripts/coverageReporter.js)
        echo "::group::CoverageBadgeReporter"
        for i; do
          echo "$i"
          echo "::set-output name=${i}"
        done
        echo "::endgroup::"
        IFS="$OIFS"
      id: badge-script
    - name: Create lines Badge
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: lines.json
        label: LINES
        message: ${{ steps.badge-script.outputs.LINES }}
        color: ${{ steps.badge-script.outputs.LINES_COLOR }}
    - name: Create functions Badge
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: functions.json
        label: FUNCTIONS
        message: ${{ steps.badge-script.outputs.FUNCTIONS }}
        color: ${{ steps.badge-script.outputs.FUNCTIONS_COLOR }}
    - name: Create branches Badge
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: branches.json
        label: BRANCHES
        message: ${{ steps.badge-script.outputs.BRANCHES }}
        color: ${{ steps.badge-script.outputs.BRANCHES_COLOR }}
    - name: Create statements Badge
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: statements.json
        label: STATEMENTS
        message: ${{ steps.badge-script.outputs.STATEMENTS }}
        color: ${{ steps.badge-script.outputs.STATEMENTS_COLOR }}
